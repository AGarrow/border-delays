$(document).ready( function(){
  var d = new Date();
  var today = d.getDay();
  var wday = d.getDay();
  var chart_bound = 'canada';
  var chart_commercial = false;
  var chart_wday = d.getDay();
  var chart_title;
  var chart_crossing;

  toggle_bound_button();

  $(".state").click(function(){
    $("body").data('state', $(this).attr('data'));
    $('.state').removeClass('active');
    $(this).addClass('active');
    filter_crossings();
  });

  $(".province").click(function(){
    $("body").data('province', $(this).attr('data'));
    $(".province").removeClass('active');
    $(this).addClass('active');
    filter_crossings();    
  });


  $(".day_select").click(function(){
    var clicked_button = $(this);
    $(".day_select").removeClass('active');
    clicked_button.addClass('active');
    chart_wday = clicked_button.attr('value');
    set_legend_text();
    requestData();
  });

  function filter_crossings(){
    var state = $("body").data('state');
    var province = $("body").data('province');
    $.get("filter_crossings", {state: state, province: province}, function(data){
      populate_crossings(data);
    });
  }



  function toggle_bound_button(){
    var bound_button = $("#bound_button");
    var click_bound;
    if(chart_bound == 'canada'){
      bound_button.text('Canada => USA')
      click_bound = 'usa'
    }
    else{
      bound_button.text('USA => Canada');
      click_bound = 'canada'
    }
    bound_button.click(function(){
      bound_button.unbind();
      chart_bound = click_bound;
      requestData();
      toggle_bound_button();
    });
  };

  function set_legend_text(){
    var legend = $("#legend-recent");
    if(chart_wday == today){
      legend.text(" = Today");
    }
    else{
      var weekday = $(".day_select.active").text()
      legend.text(" = last "+weekday);
    }
  }

  function populate_crossings(data){
    $("#crossings").html("");
    if(data.length == 0){
      $("#crossings").append("<h4 class=\"list-group-item-heading\"> Sorry </h4> <p class=\"list-group-item-text\"> There are no crossings between this provicne and state </p> ");
    }
    $.each(data, function(i, crossing){
      var list_div = "<a href=\"#\" data-id="+crossing['id']+" class=\"list-group-item crossing-selector\">\
      <h4 class=\"list-group-item-heading\">"+crossing['title']+"</h4>\
      <p class=\"list-group-item-text\">"+crossing['location']+"</p></a>";

      $("#crossings").append(list_div);
    });
    $(".crossing-selector").click(function(){
      $('.list-group-item').removeClass('active');
      $(this).addClass("active");
      chart_crossing = $(this).data('id');
      requestData( $(this).data('id'), 'canada', false, wday);
    });
  }

  function requestData(){
    <% url = BorderTimes::Application.routes.url_helpers %>
    $.ajax({
      url: "<%= url.chart_data_path %>",
      type: "Get",
      dataType: "json",
      data: {
        bound: chart_bound, 
        id: chart_crossing,
        commercial: chart_commercial,
        wday: chart_wday
      },
      success: function(response, textStatus, xhr) {
        drawChart(response);
      }
    })
  }
  var canvas = document.getElementById('chart');
  var ctx = canvas.getContext("2d");
  var chart = new Chart(ctx);

  function drawChart(response){
    
    data = {
      labels: response.data.labels,
      datasets: [
        {
          fillColor : "rgba(220,220,220,0.5)",
          strokeColor : "rgba(220,220,220,1)",
          pointColor : "rgba(220,220,220,1)",
          pointStrokeColor : "#fff",
          data : response.data.average
        },

        {
        fillColor : "rgba(151,187,205,0.5)",
        strokeColor : "rgba(151,187,205,1)",
        pointColor : "rgba(151,187,205,1)",
        pointStrokeColor : "#fff",
        data : response.data.recent
        } 
      ]
    }

    options = {
      scaleOverride : true,
      scaleSteps : 6,
      scaleStepWidth : 10,
      scaleStartValue : 0,
      scaleFontSize: 8,
      pointDot: false
    }
    document.getElementById('chart-container').style.display = "block";
    $("#chart-title").html(response.title)
    
    var bound = (response.bound=="canada")? "United States => Canada" : "Canada => United States";
    $("#bound").html(bound);
    var canvas = document.getElementById("chart");
    chart.Line(data, options);    
    }
  
});