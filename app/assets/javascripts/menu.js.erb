$(document).ready( function(){
  var d = new Date();
  var wday = d.getDay();
  $(".state").click(function(){
    $("body").data('state', $(this).attr('data'));
    $('.state').removeClass('active');
    $(this).addClass('active');
    filter_crossings();
  });

  $(".province").click(function(){
    $("body").data('province', $(this).attr('data'));
    $(".province").removeClass('active');
    $(this).addClass('active');
    filter_crossings();    
  });

  function filter_crossings(){
    var state = $("body").data('state');
    var province = $("body").data('province');
    $.get("filter_crossings", {state: state, province: province}, function(data){
      populate_crossings(data);
    });
  }


  function populate_crossings(data){
    $("#crossings").html("");
    if(data.length == 0){
      $("#crossings").append("<h4 class=\"list-group-item-heading\"> Sorry </h4> <p class=\"list-group-item-text\"> There are no crossings between this provicne and state </p> ");
    }
    $.each(data, function(i, crossing){
      var list_div = "<a href=\"#\" data-id="+crossing['id']+" class=\"list-group-item crossing-selector\">\
      <h4 class=\"list-group-item-heading\">"+crossing['title']+"</h4>\
      <p class=\"list-group-item-text\">"+crossing['location']+"</p></a>";

      $("#crossings").append(list_div);
    });
    $(".crossing-selector").click(function(){
      $('.list-group-item').removeClass('active');
      $(this).addClass("active");
      requestData( $(this).data('id'), 'canada', false, wday);
    });
  }

  function requestData(crossing_id, bound, commercial, wday, title){
    <% url = BorderTimes::Application.routes.url_helpers %>
    $.ajax({
      url: "<%= url.chart_data_path %>",
      type: "Get",
      dataType: "json",
      data: {
        bound: bound, 
        id: crossing_id,
        commercial: commercial,
        wday: wday
      },
      success: function(response, textStatus, xhr) {
        drawChart(response);
      }
    })
  }
  var canvas = document.getElementById('chart');
  var ctx = canvas.getContext("2d");
  var chart = new Chart(ctx);

  function drawChart(response){
    data = {
      labels: response.labels,
      datasets: [
        {
          fillColor : "rgba(220,220,220,0.5)",
          strokeColor : "rgba(220,220,220,1)",
          pointColor : "rgba(220,220,220,1)",
          pointStrokeColor : "#fff",
          data : response.average
        },

        {
        fillColor : "rgba(151,187,205,0.5)",
        strokeColor : "rgba(151,187,205,1)",
        pointColor : "rgba(151,187,205,1)",
        pointStrokeColor : "#fff",
        data : response.recent
        } 
      ]
    }

    options = {
      scaleOverride : true,
      scaleSteps : 6,
      scaleStepWidth : 10,
      scaleStartValue : 0,
      scaleFontSize: 8,
      pointDot: false
    }
    var canvas = document.getElementById("chart");
    var ctx = canvas.getContext("2d");
    var chart = new Chart(ctx);
    chart.Line(data, options);    
  }
  
});